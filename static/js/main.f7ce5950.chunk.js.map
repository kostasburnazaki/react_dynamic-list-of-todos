{"version":3,"sources":["helpers/constants.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","initValues","initTodos","initSelectedTodoId","initFilter","all","initSearch","TodoList","todos","filter","selectTodo","selectedTodoId","selectedTodo","search","todosForRender","todo","completed","active","Error","title","toLowerCase","includes","className","map","id","color","type","onClick","TodoFilter","setFilter","setSearch","searchQuery","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","unselectTodo","useState","user","setUser","foundTodo","find","userId","useEffect","getUser","userFromServer","href","email","name","App","setTodos","setTodoId","todosFromServer","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ce5950.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const initValues = {\n  initTodos: [],\n  initSelectedTodoId: 0,\n  initFilter: Filter.all,\n  initSearch: '',\n};\n","import { FC } from 'react';\nimport { Filter, initValues } from '../../helpers/constants';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  filter: string,\n  selectTodo: (todoId: number) => void,\n  selectedTodo: number,\n  search: string,\n};\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  filter,\n  selectTodo,\n  selectedTodo: selectedTodoId,\n  search,\n}) => {\n  const todosForRender = todos\n    .filter((todo: Todo) => {\n      switch (filter) {\n        case Filter.all:\n          return todo;\n        case Filter.completed:\n          return todo.completed;\n        case Filter.active:\n          return !todo.completed;\n        default:\n          throw new Error('Error during filtering');\n      }\n    })\n    .filter((todo: Todo) => {\n      return todo.title.toLowerCase().includes(search.toLowerCase());\n    });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todosForRender.map(({ id, title, completed }: Todo) => {\n          const color = completed ? 'success' : 'danger';\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              {completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : (\n                  <td className=\"is-vcentered\" />\n                )}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${color}`}>\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {selectedTodoId === id\n                  ? (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectTodo(initValues.initSelectedTodoId)}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    </button>\n                  )\n                  : (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectTodo(id)}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../helpers/constants';\n\ntype Props = {\n  setFilter: (value: string) => void,\n  filter: string,\n  setSearch: (value: string) => void,\n  searchQuery: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  filter,\n  setSearch,\n  searchQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value={Filter.all}>\n              All\n            </option>\n            <option value={Filter.active}>\n              Active\n            </option>\n            <option value={Filter.completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: number,\n  unselectTodo: () => void,\n  todos: Todo[],\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  unselectTodo,\n  todos,\n}) => {\n  const [user, setUser] = useState<User>();\n  const foundTodo = todos.find(todo => todo.id === selectedTodo);\n\n  if (foundTodo) {\n    const {\n      id,\n      title,\n      completed,\n      userId,\n    } = foundTodo;\n\n    const color = completed ? 'success' : 'danger';\n\n    useEffect(() => {\n      getUser(userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n        });\n    }, [selectedTodo]);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {user ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => unselectTodo()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={`has-text-${color}`}>\n                  {completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : <Loader />}\n      </div>\n    );\n  }\n\n  throw new Error('Todo not found');\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { initValues } from './helpers/constants';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initValues.initTodos);\n  const [selectedTodoId, setTodoId] = useState<number>(initValues.initSelectedTodoId);\n  const [filter, setFilter] = useState<string>(initValues.initFilter);\n  const [search, setSearch] = useState<string>(initValues.initSearch);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={(value: string) => setFilter(value)}\n                filter={filter}\n                setSearch={(value: string) => setSearch(value)}\n                searchQuery={search}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={todos}\n                selectedTodo={selectedTodoId}\n                selectTodo={(todoId: number) => setTodoId(todoId)}\n                filter={filter}\n                search={search}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          todos={todos}\n          selectedTodo={selectedTodoId}\n          unselectTodo={() => setTodoId(0)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}